(function() {
  var JavaScriptCompiler, capitalize, formatClassName;

  capitalize = function(string) {
    return (string[0] || '').toUpperCase() + string.slice(1);
  };

  formatClassName = function(filename) {
    return filename.split('_').map(capitalize).join('');
  };

  module.exports = JavaScriptCompiler = (function() {

    JavaScriptCompiler.prototype.brunchPlugin = true;

    JavaScriptCompiler.prototype.type = 'javascript';

    JavaScriptCompiler.prototype.extension = 'js';

    JavaScriptCompiler.prototype.generators = {
      backbone: (function() {
        var types;
        types = {};
        ['collection', 'model', 'router', 'view'].forEach(function(type) {
          var parent;
          parent = formatClassName(type);
          return types[type] = function(fileName) {
            var className;
            className = formatClassName(fileName);
            return "exports." + className + " = Backbone." + parent + ".extend({\n\n});";
          };
        });
        return types;
      })()
    };

    function JavaScriptCompiler(config) {
      this.config = config;
      null;
    }

    JavaScriptCompiler.prototype.compile = function(data, path, callback) {
      try {
        return callback(null, data);
      } catch (error) {
        return callback(error);
      }
    };

    return JavaScriptCompiler;

  })();

}).call(this);
